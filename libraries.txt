// basic next setup

npx create-next-app@latest
/*
√ What is your project named? ... .
√ Would you like to use TypeScript? ... No / Yes
√ Would you like to use ESLint? ... No / Yes
√ Would you like to use Tailwind CSS? ... No / Yes
√ Would you like to use `src/` directory? ... No / Yes
√ Would you like to use App Router? (recommended) ... No / Yes
√ Would you like to customize the default import alias (@/*)? ... No / Yes
*/

// in tsconfig, update: "moduleResolution": "node",

// run app
npm run dev

// add tailwind dependencies (follow https://tailwindcss.com/docs/guides/nextjs)

npm install -D tailwindcss postcss autoprefixer
npx tailwindcss init -p

// ESLint standard configuration 

add eslint extension
npm install eslint-config-standard (update .eslintrc.json)
npm install eslint-plugin-tailwindcss (organize classname logically to make code easier to read)
npm install eslint-config-prettier (to avoid conflicts between prettier & eslint)
npm install prettier (and update settings to integrate eslint & prettier with VS code: ctrl+shift+p => Open Settings (JSON))
npm run lint (to test eslint)

// push code to github

git init
git add .
git commit -m "added tailwind, prettier and linting libraries"
git branch -M main
git remote add origin https://github.com/AbhaySingh5349/airbnb_nextjs.git
git push -u origin main

// delete page.tsx & page.module.css and start creating your routes

// branching (from src control)

(from 3 dots) Stash -> Stash (Include Untracked) -> enter
create new branch after clicking on bottom left src control icon -> Create bew branch... -> add name -> publish branch
(from 3 dots) Stash -> Apply Latest Stash
git add .
git commit -m "..."
git push
Synch Changes

// using google fonts in layout.tsx
import { NAME_OF_FONT_STYLE } from 'next/font/google';
const font = NAME_OF_FONT_STYLE({
  subsets: ['latin, ...'],
});
apply by: className={font.className}

// for icons
npm install react-icons

// alternative to Redux for state management
npm install zustand

// for auth requests
npm install axios

// handle form
npm install zod
npm i react-hook-form
npm i @hookform/resolvers

// mongodb
npm install mongoose mongodb

// toast messages (need to create provider before using)
npm install react-hot-toast

// auth with nextjs
npm install next-auth
npm i @next-auth/mongodb-adapter (add your db name also in mongo url)

// hashing password
npm i --save-dev bcrypt @types/bcrypt

// setup google sign-in
https://console.cloud.google.com/
create new project
open project & search for Enabled API's & services
in left-side-bar, select OAuth consent screen -> select extrnal -> create
after adding req info, go to "credentials" -> "create credentials" -> OAuth Client Id -> Authorized redirect URI: http://localhost:3000/api/auth/callback/google
add GOOGLE_CLIENT_ID & GOOGLE_CLIENT_SECRET to env 
update nextconfig.js to be able to fetch user image

// work with query params
npm install query-string

// to get list of countries
npm i world-countries

// to select drop down options from map
npm i react-select

// to add map 
npm i react-leaflet
npm i --save-dev @types/leaflet
npm i leaflet @types/leaflet

// to use cloudinary for storing images
npm install next-cloudinary

// for date manipulation
npm i date-fns
npm install react-date-range
npm i --save-dev @types/react-date-range

// to deal with conflicting dependencies
npm config set legacy-peer-deps true
npm update --save --legacy-peer-deps
npm install   